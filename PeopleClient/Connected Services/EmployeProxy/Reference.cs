//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PeopleClient.EmployeProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeProxy.IEmployeeServ")]
    public interface IEmployeeServ {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServ/RegistrarEmpleado", ReplyAction="http://tempuri.org/IEmployeeServ/RegistrarEmpleadoResponse")]
        string RegistrarEmpleado(int id, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeServ/RegistrarEmpleado", ReplyAction="http://tempuri.org/IEmployeeServ/RegistrarEmpleadoResponse")]
        System.Threading.Tasks.Task<string> RegistrarEmpleadoAsync(int id, string Name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeServChannel : PeopleClient.EmployeProxy.IEmployeeServ, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeServClient : System.ServiceModel.ClientBase<PeopleClient.EmployeProxy.IEmployeeServ>, PeopleClient.EmployeProxy.IEmployeeServ {
        
        public EmployeeServClient() {
        }
        
        public EmployeeServClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeServClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string RegistrarEmpleado(int id, string Name) {
            return base.Channel.RegistrarEmpleado(id, Name);
        }
        
        public System.Threading.Tasks.Task<string> RegistrarEmpleadoAsync(int id, string Name) {
            return base.Channel.RegistrarEmpleadoAsync(id, Name);
        }
    }
}
